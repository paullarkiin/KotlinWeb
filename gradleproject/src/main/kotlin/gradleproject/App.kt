/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package gradleproject

import io.ktor.jackson.*
import io.ktor.features.ContentNegotiation
import io.ktor.application.*
import io.ktor.response.*
import io.ktor.routing.*
import io.ktor.request.receive
import io.ktor.server.netty.Netty
import io.ktor.server.engine.embeddedServer


data class User(val name: String, val age: Int)

// this layout allows for auto-reloading so you dont have to run gradle each time.
fun Application.myApp() {
    routing{
        get("/") {
            call.respond(User("John", 36))
        }

        post("/") {
            val user = call.receive<User>()
            call.respond(user)
        }
    }

    install(ContentNegotiation) {
        jackson {

        }
    }
}

fun main() {
   embeddedServer(
       Netty,
       watchPaths = listOf("gradleproject"),
       module = Application::myApp,
       port = 8080
   ).start(wait = true)
   
}
